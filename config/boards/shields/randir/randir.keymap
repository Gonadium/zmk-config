/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */




#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&sk {
     release-after-ms = <2000>;
     quick-release;
 };

/ {
	
	combos {
		compatible = "zmk,combos";
		
//		LOWERCASE LETTERS
		combo_p {timeout-ms = <500>;key-positions = <1 2>;bindings = <&kp P >;};
		combo_b {		//				b
			timeout-ms = <500>;
			key-positions = <0 1>;
			bindings = <&kp B >;
			};
		combo_l {		//				l
			timeout-ms = <500>;
			key-positions = <4 5>;
			bindings = <&kp L >;
			};
		combo_g {		//				g
			timeout-ms = <500>;
			key-positions = <0 3>;
			bindings = <&kp G >;
			};
		combo_z {		//				z
			timeout-ms = <500>;
			key-positions = <0 2>;
			bindings = <&kp Z >;
			};
		combo_qu {		//				qu
			timeout-ms = <500>;
			key-positions = <4 6>;
			bindings = <&kp Q &kp U >;
			};
		combo_x {		//				x
			timeout-ms = <500>;
			key-positions = <0 6>;
			bindings = <&kp X >;
			};
		combo_v {		//				v
			timeout-ms = <500>;
			key-positions = <1 7>;
			bindings = <&kp V >;
			};
		combo_m {		//				m
			timeout-ms = <500>;
			key-positions = <0 7>;
			bindings = <&kp M >;
			};
		combo_u {		//				u
			timeout-ms = <500>;
			key-positions = <5 6>;
			bindings = <&kp U >;
			};
		combo_y {		//				y
			timeout-ms = <500>;
			key-positions = <2 3>;
			bindings = <&kp Y >;
			};
		combo_h {		//				h
			timeout-ms = <500>;
			key-positions = <6 7>;
			bindings = <&kp H >;
			};
		combo_d {		//				d
			timeout-ms = <500>;
			key-positions = <4 7>;
			bindings = <&kp D >;
			};
		combo_f {		//				f
			timeout-ms = <500>;
			key-positions = <1 3>;
			bindings = <&kp F >;
			};
		combo_c {		//				c
			timeout-ms = <500>;
			key-positions = <5 7>;
			bindings = <&kp C >;
			};
		combo_k {		//				k
			timeout-ms = <500>;
			key-positions = <3 5>;
			bindings = <&kp K >;
			};
		combo_j {		//				j
			timeout-ms = <500>;
			key-positions = <2 4>;
			bindings = <&kp J >;
			};
		combo_w {		//				w
			timeout-ms = <500>;
			key-positions = <3 4>;
			bindings = <&kp W >;
			};


//		UPPERCASE LETTERS
		combo_upper_R {		//			R
			timeout-ms = <500>;
			key-positions = <0 9>;
			bindings = <&kp LS(R) >;
			};
		combo_upper_S {		//			S
			timeout-ms = <500>;
			key-positions = <1 9>;
			bindings = <&kp LS(S) >;
			};
		combo_upper_N {		//			N
			timeout-ms = <500>;
			key-positions = <2 9>;
			bindings = <&kp LS(N) >;
			};
		combo_upper_I {		//			I
			timeout-ms = <500>;
			key-positions = <3 9>;
			bindings = <&kp LS(I) >;
			};
		combo_upper_P {		//			P
			timeout-ms = <500>;
			key-positions = <1 2 9>;
			bindings = <&kp LS(P) >;
			};
		combo_upper_B {		//			B
			timeout-ms = <500>;
			key-positions = <0 1 9>;
			bindings = <&kp LS(B) >;
			};
		combo_upper_L {		//			L
			timeout-ms = <500>;
			key-positions = <4 5 9>;
			bindings = <&kp LS(L) >;
			};
		combo_upper_G {		//			G
			timeout-ms = <500>;
			key-positions = <0 3 9>;
			bindings = <&kp LS(G) >;
			};
		combo_upper_Z {		//			Z
			timeout-ms = <500>;
			key-positions = <0 2 9>;
			bindings = <&kp LS(Z) >;
			};
		combo_upper_Qu {		//		Qu
			timeout-ms = <500>;
			key-positions = <4 6 9>;
			bindings = <&kp LS(Q) &kp U >;
			};
		combo_upper_X {		//			X
			timeout-ms = <500>;
			key-positions = <0 6 9>;
			bindings = <&kp LS(X) >;
			};
		combo_upper_V {		//			V
			timeout-ms = <500>;
			key-positions = <1 7 9>;
			bindings = <&kp LS(V) >;
			};
		combo_upper_M {		//			M
			timeout-ms = <500>;
			key-positions = <0 7 9>;
			bindings = <&kp LS(M) >;
			};
		combo_upper_A {			//		A
			timeout-ms = <500>;
			key-positions = <4 9>;
			bindings = <&kp LS(A) >;
			};
		combo_upper_O {			//		O
			timeout-ms = <500>;
			key-positions = <5 9>;
			bindings = <&kp LS(O) >;
			};
		combo_upper_T {			//		T
			timeout-ms = <500>;
			key-positions = <6 9>;
			bindings = <&kp LS(T) >;
			};
		combo_upper_E {			//		E
			timeout-ms = <500>;
			key-positions = <7 9>;
			bindings = <&kp LS(E) >;
			};
		combo_upper_U {			//		U
			timeout-ms = <500>;
			key-positions = <5 6 9>;
			bindings = <&kp LS(U) >;
			};
		combo_upper_Y {			//		Y
			timeout-ms = <500>;
			key-positions = <2 3 9>;
			bindings = <&kp LS(Y) >;
			};
		combo_upper_H {			//		H
			timeout-ms = <500>;
			key-positions = <6 7 9>;
			bindings = <&kp LS(H) >;
			};
		combo_upper_D {			//		D
			timeout-ms = <500>;
			key-positions = <4 7 9>;
			bindings = <&kp LS(D) >;
			};
		combo_upper_F {			//		F
			timeout-ms = <500>;
			key-positions = <1 3 9>;
			bindings = <&kp LS(F) >;
			};
		combo_upper_C {			//		C
			timeout-ms = <500>;
			key-positions = <5 7 9>;
			bindings = <&kp LS(C) >;
			};
		combo_upper_K {			//		K
			timeout-ms = <500>;
			key-positions = <3 5 9>;
			bindings = <&kp LS(K) >;
			};
		combo_upper_J {			//		J
			timeout-ms = <500>;
			key-positions = <2 4 9>;
			bindings = <&kp LS(J) >;
			};
		combo_upper_W {			//		W
			timeout-ms = <500>;
			key-positions = <3 4 9>;
			bindings = <&kp LS(W) >;
			};


		};


   
	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
				&kp R	&kp S	&kp N	&kp I
				&kp A	&kp O	&kp T	&kp E 
				&none	&kp SPACE	&none			
				>;
			};
		};
};
