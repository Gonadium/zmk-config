/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



&sk {
     release-after-ms = <2000>;
     quick-release;
 };
 

/ {
    combos {
        compatible = "zmk,combos";
		
//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  |	2 | 3  | 
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐ 
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
// COMBOS LETTERS

		combo_A {			timeout-ms = <50>;	key-positions = <4 9>;			bindings = <&kp LS(A) >;};
		combo_B {			timeout-ms = <50>;	key-positions = <0 1 9>;		bindings = <&kp LS(B) >;};
		combo_b {			timeout-ms = <50>;	key-positions = <0 1>;			bindings = <&kp B >;};
		combo_C {			timeout-ms = <50>;	key-positions = <5 7 9>;		bindings = <&kp LS(C) >;};
		combo_c {			timeout-ms = <50>;	key-positions = <5 7>;			bindings = <&kp C >;};
		combo_D {			timeout-ms = <50>;	key-positions = <4 7 9>;		bindings = <&kp LS(D) >;};
		combo_d {			timeout-ms = <50>;	key-positions = <4 7>;			bindings = <&kp D >;};
		combo_E {			timeout-ms = <50>;	key-positions = <7 9>;			bindings = <&kp LS(E) >;};
		combo_F {			timeout-ms = <50>;	key-positions = <1 3 9>;		bindings = <&kp LS(F) >;};
		combo_f {			timeout-ms = <50>;	key-positions = <1 3>;			bindings = <&kp F >;};
		combo_G {			timeout-ms = <50>;	key-positions = <0 3 9>;		bindings = <&kp LS(G) >;};
		combo_g {			timeout-ms = <50>;	key-positions = <0 3>;			bindings = <&kp G >;};
		combo_H {			timeout-ms = <50>;	key-positions = <6 7 9>;		bindings = <&kp LS(H) >;};
		combo_h {			timeout-ms = <50>;	key-positions = <6 7>;			bindings = <&kp H >;};
		combo_I {			timeout-ms = <50>;	key-positions = <3 9>;			bindings = <&kp LS(I) >;};
		combo_J {			timeout-ms = <50>;	key-positions = <2 4 9>;		bindings = <&kp LS(J) >;};
		combo_j {			timeout-ms = <50>;	key-positions = <2 4>;			bindings = <&kp J >;};
		combo_K {			timeout-ms = <50>;	key-positions = <3 5 9>;		bindings = <&kp LS(K) >;};
		combo_k {			timeout-ms = <50>;	key-positions = <3 5>;			bindings = <&kp K >;};
		combo_L {			timeout-ms = <50>;	key-positions = <4 5 9>;		bindings = <&kp LS(L) >;};
		combo_l {			timeout-ms = <50>;	key-positions = <4 5>;			bindings = <&kp L >;};
		combo_M {			timeout-ms = <50>;	key-positions = <0 7 9>;		bindings = <&kp LS(M) >;};
		combo_m {			timeout-ms = <50>;	key-positions = <0 7>;			bindings = <&kp M >;};
		combo_N {			timeout-ms = <50>;	key-positions = <2 9>;			bindings = <&kp LS(N) >;};
		combo_O {			timeout-ms = <50>;	key-positions = <5 9>;			bindings = <&kp LS(O) >;};
		combo_P {			timeout-ms = <50>;	key-positions = <1 2 9>;		bindings = <&kp LS(P) >;};
		combo_p {			timeout-ms = <50>;	key-positions = <1 2>;			bindings = <&kp P >;};
		combo_Qu {			timeout-ms = <50>;	key-positions = <4 6 9>;		bindings = <&kp LS(Q)>,<&kp U >;};
		combo_qu {			timeout-ms = <50>;	key-positions = <4 6>;			bindings = <&kp Q>,<&kp U >;};
		combo_R {			timeout-ms = <50>;	key-positions = <0 9>;			bindings = <&kp LS(R) >;};
		combo_S {			timeout-ms = <50>;	key-positions = <1 9>;			bindings = <&kp LS(S) >;};
		combo_T {			timeout-ms = <50>;	key-positions = <6 9>;			bindings = <&kp LS(T) >;};
		combo_U {			timeout-ms = <50>;	key-positions = <5 6 9>;		bindings = <&kp LS(U) >;};
		combo_u {			timeout-ms = <50>;	key-positions = <5 6>;			bindings = <&kp U >;};
		combo_V {			timeout-ms = <50>;	key-positions = <1 7 9>;		bindings = <&kp LS(V) >;};
		combo_v {			timeout-ms = <50>;	key-positions = <1 7>;			bindings = <&kp V >;};
		combo_W {			timeout-ms = <50>;	key-positions = <3 4 9>;		bindings = <&kp LS(W) >;};
		combo_w {			timeout-ms = <50>;	key-positions = <3 4>;			bindings = <&kp W >;};
		combo_X {			timeout-ms = <50>;	key-positions = <0 6 9>;		bindings = <&kp LS(X) >;};
		combo_x {			timeout-ms = <50>;	key-positions = <0 6>;			bindings = <&kp X >;};
		combo_Y {			timeout-ms = <50>;	key-positions = <2 3 9>;		bindings = <&kp LS(Y) >;};
		combo_y {			timeout-ms = <50>;	key-positions = <2 3>;			bindings = <&kp Y >;};
		combo_Z {			timeout-ms = <50>;	key-positions = <0 2 9>;		bindings = <&kp LS(Z) >;};
		combo_z {			timeout-ms = <50>;	key-positions = <0 2>;			bindings = <&kp Z >;};
	}; /*


//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  |	2 | 3  | 
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐ 
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
// COMBOS PUNCTUATION

		combo_. {			timeout-ms = <50>;	key-positions = <0 5>;			bindings = <&kp PERIOD >;};
		combo_, {			timeout-ms = <50>;	key-positions = <2 7>;			bindings = <&kp COMMA >;};
		combo_: {			timeout-ms = <50>;	key-positions = <0 5 9>;		bindings = <&kp COLON >;};
		combo_; {			timeout-ms = <50>;	key-positions = <2 7 9>;		bindings = <&kp SEMICOLON >;};
		combo_? {			timeout-ms = <50>;	key-positions = <3 6>;			bindings = <&kp QUESTION >;};
		combo_! {			timeout-ms = <50>;	key-positions = <3 6 9>;		bindings = <&kp EXCLAMATION >;};
		combo_apostrophe {	timeout-ms = <50>;	key-positions = <1 4>;			bindings = <&kp APOSTROPHE >;};
		combo_dbl_quotes {	timeout-ms = <50>;	key-positions = <1 4 9>;		bindings = <&kp DOUBLE_QUOTES >;};
//		combo_apostrophe {	timeout-ms = <50>;	key-positions = <1 4 10>;		bindings = <&kp ` >;};		
//		combo_ellipsis {	timeout-ms = <50>;	key-positions = <2 7 10>;		bindings = <&kp … >;};		
		
//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  |	2 | 3  | 
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐ 
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
// COMBOS NUMBERS
		combo_1 {			timeout-ms = <50>;	key-positions = <0 10>;			bindings = <&kp N1 >;};
		combo_2 {			timeout-ms = <50>;	key-positions = <1 10>;			bindings = <&kp N2 >;};
		combo_3 {			timeout-ms = <50>;	key-positions = <2 10>;			bindings = <&kp N3 >;};
		combo_4 {			timeout-ms = <50>;	key-positions = <3 10>;			bindings = <&kp N4 >;};
		combo_5 {			timeout-ms = <50>;	key-positions = <4 10>;			bindings = <&kp N5 >;};
		combo_6 {			timeout-ms = <50>;	key-positions = <5 10>;			bindings = <&kp N6 >;};
		combo_7 {			timeout-ms = <50>;	key-positions = <6 10>;			bindings = <&kp N7 >;};
		combo_8 {			timeout-ms = <50>;	key-positions = <7 10>;			bindings = <&kp N8 >;};
		combo_9 {			timeout-ms = <50>;	key-positions = <1 2 10>;		bindings = <&kp N9 >;};
		combo_0 {			timeout-ms = <50>;	key-positions = <5 6 10>;		bindings = <&kp N0 >;};

//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  |	2 | 3  | 
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐ 
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
//// COMBOS NUMBERS

		combo_[ {			timeout-ms = <50>;	key-positions = <0 1 10>;		bindings = <&kp LEFT_BRACKET >;};
		combo_] {			timeout-ms = <50>;	key-positions = <2 3 10>;		bindings = <&kp RIGHT_BRACKET >;};
		combo_{ {			timeout-ms = <50>;	key-positions = <0 2 10>;		bindings = <&kp LEFT_BRACE >;};
		combo_} {			timeout-ms = <50>;	key-positions = <1 3 10>;		bindings = <&kp RIGHT_BRACE >;};
		combo_@ {			timeout-ms = <50>;	key-positions = <0 3 10>;		bindings = <&kp AT >;};
//		combo_degree {		timeout-ms = <50>;	key-positions = <0 5 10>;		bindings = <&kp ° >;};
		combo_^ {			timeout-ms = <50>;	key-positions = <0 6 10>;		bindings = <&kp CARET >;};
		combo_$ {			timeout-ms = <50>;	key-positions = <0 7 10>;		bindings = <&kp DOLLAR >;};
		combo__ {			timeout-ms = <50>;	key-positions = <2 5 9>;		bindings = <&kp UNDERSCORE >;};
		combo_= {			timeout-ms = <50>;	key-positions = <2 4 10>;		bindings = <&kp EQUAL >;};
		combo_& {			timeout-ms = <50>;	key-positions = <3 4 10>;		bindings = <&kp AMPERSAND >;};
		combo_~ {			timeout-ms = <50>;	key-positions = <2 5 10>;		bindings = <&kp TILDE >;};
		combo_+ {			timeout-ms = <50>;	key-positions = <3 5 10>;		bindings = <&kp PLUS >;};
		combo_( {			timeout-ms = <50>;	key-positions = <4 5 10>;		bindings = <&kp LEFT_PARENTHESIS >;};
		combo_) {			timeout-ms = <50>;	key-positions = <6 7 10>;		bindings = <&kp RIGHT_PARENTHESIS >;};
		combo_% {			timeout-ms = <50>;	key-positions = <3 6 10>;		bindings = <&kp PERCENT >;};
		combo_< {			timeout-ms = <50>;	key-positions = <4 6 10>;		bindings = <&kp LESS_THAN >;};
		combo_> {			timeout-ms = <50>;	key-positions = <5 7 10>;		bindings = <&kp GREATER_THAN >;};
		combo_* {			timeout-ms = <50>;	key-positions = <1 7 10>;		bindings = <&kp ASTERISK >;};
		combo_# {			timeout-ms = <50>;	key-positions = <4 7 10>;		bindings = <&kp HASH >;};
		combo_- {			timeout-ms = <50>;	key-positions = <2 5>;			bindings = <&kp MINUS >;};
		combo_/ {			timeout-ms = <50>;	key-positions = <1 6>;			bindings = <&kp SLASH >;};
		combo_\ {			timeout-ms = <50>;	key-positions = <1 6 9>;		bindings = <&kp BACKSLASH >;};
		combo_| {			timeout-ms = <50>;	key-positions = <1 6 10>;		bindings = <&kp PIPE >;};		


		
//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  |	2 | 3  | 
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐ 
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
//
// COMBOS WHITESPACES, BACKSPACES AND ENTER

		combo_ENTER {		timeout-ms = <50>;	key-positions = <5 6 7>;		bindings = <&kp ENTER >;};
		combo_BCKSPC {		timeout-ms = <50>;	key-positions = <1 2 3>;		bindings = <&kp BACKSPACE >;};
		combo_DEL {			timeout-ms = <50>;	key-positions = <0 1 2>;		bindings = <&kp DELETE >;};
		combo_TAB {			timeout-ms = <50>;	key-positions = <4 5 6>;		bindings = <&kp TAB >;};
		combo_ESC {			timeout-ms = <50>;	key-positions = <0 1 2 3>;		bindings = <&kp ESCAPE >;};
		
//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  |	2 | 3  | 
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐ 
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
// COMBOS FOR MODIFIERS

		combo_ALT {			timeout-ms = <50>;	key-positions = <3 7>;			bindings = <&sk LEFT_ALT >;};
		combo_GUI {			timeout-ms = <50>;	key-positions = <2 6>;			bindings = <&sk LEFT_GUI >;};
		combo_PRINTSCREEN {	timeout-ms = <50>;	key-positions = <2 6 9>;		bindings = <&kp PRINTSCREEN >;};
		combo_ALTPS {		timeout-ms = <50>;	key-positions = <2 6 10>;		bindings = <&kp LA(PRINTSCREEN) >;};
		combo_CTRLGUI {		timeout-ms = <50>;	key-positions = <0 2 4 6>;		bindings = <&sk LC(LEFT_GUI) >;};
		combo_CTRLSHFTALT {	timeout-ms = <50>;	key-positions = <0 1 3 4 5 7>;	bindings = <&sk LC(LS(LEFT_ALT)) >;};
//		combo_GUIALT {		timeout-ms = <50>;	key-positions = <2 3 6 7>;		bindings = <&sk GUIALT >;};
		combo_CTRLDEL {		timeout-ms = <50>;	key-positions = <0 1 2 9>;		bindings = <&kp LC(DEL) >;};
		combo_CTRL {		timeout-ms = <50>;	key-positions = <0 4>;			bindings = <&kp LEFT_CONTROL >;};
		combo_PAGEUP {		timeout-ms = <50>;	key-positions = <0 4 9>;		bindings = <&kp PAGE_UP >;};
		combo_PAGEDOWN {	timeout-ms = <50>;	key-positions = <0 4 10>;		bindings = <&kp PAGE_DOWN >;};
		combo_SHIFT {		timeout-ms = <50>;	key-positions = <1 5>;			bindings = <&kp LEFT_SHIFT >;};
		combo_HOME {		timeout-ms = <50>;	key-positions = <1 5 9>;		bindings = <&kp HOME >;};
		combo_END {			timeout-ms = <50>;	key-positions = <1 5 10>;		bindings = <&kp END >;};
		combo_CTRLSHFT {	timeout-ms = <50>;	key-positions = <0 1 4 5>;		bindings = <&sk LC(LEFT_SHIFT) >;};
		combo_CTRLALT {		timeout-ms = <50>;	key-positions = <0 3 4 7>;		bindings = <&sk LC(LEFT_ALT) >;};
		combo_SHFTALT {		timeout-ms = <50>;	key-positions = <1 3 5 7>;		bindings = <&sk LS(LEFT_ALT) >;};
//		combo_FUNCTION {	timeout-ms = <50>;	key-positions = <1 2 3 10>;		bindings = <&kp FN >;};

 
//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  |	2 | 3  | 
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐ 
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
//	COMBOS FOR WORD PARTS

		combo_able {		timeout-ms = <50>;	key-positions = <0 1 4 5 7>;	bindings = <&kp A>,<&kp B>,<&kp L>,<&kp E>;};
		combo_about {		timeout-ms = <50>;	key-positions = <0 1 4 5 6>;	bindings = <&kp A>,<&kp B>,<&kp O>,<&kp U>,<&kp T >;};
		combo_ack {			timeout-ms = <50>;	key-positions = <3 4 5 7>;		bindings = <&kp A>,<&kp C>,<&kp K>;};
/*		combo_aise {		timeout-ms = <50>;	key-positions = <1 3 4 7 9>;	bindings = <&kp aise >;};
		combo_ake {			timeout-ms = <50>;	key-positions = <3 4 5 7 9>;	bindings = <&kp ake >;};
		combo_al {			timeout-ms = <50>;	key-positions = <0 4 5 9>;		bindings = <&kp al >;};
		combo_all {			timeout-ms = <50>;	key-positions = <0 4 5>;		bindings = <&kp all >;};
		combo_ally {		timeout-ms = <50>;	key-positions = <2 3 4 5 10>;	bindings = <&kp ally >;};
		combo_also {		timeout-ms = <50>;	key-positions = <1 4 5 6 7>;	bindings = <&kp also >;};
		combo_and {			timeout-ms = <50>;	key-positions = <2 4 7>;		bindings = <&kp and >;};
		combo_ange {		timeout-ms = <50>;	key-positions = <0 2 3 4 7>;	bindings = <&kp ange >;};
		combo_are {			timeout-ms = <50>;	key-positions = <0 4 7>;		bindings = <&kp are >;};
		combo_ation {		timeout-ms = <50>;	key-positions = <2 3 4 5 6>;	bindings = <&kp ation >;};
		combo_ative {		timeout-ms = <50>;	key-positions = <1 3 4 6 7>;	bindings = <&kp ative >;};
		combo_ave {			timeout-ms = <50>;	key-positions = <1 4 7>;		bindings = <&kp ave >;};
		combo_be {			timeout-ms = <50>;	key-positions = <0 1 7 9>;		bindings = <&kp be >;};
		combo_because {		timeout-ms = <50>;	key-positions = <0 1 4 5 6 7>;	bindings = <&kp because >;};
		combo_ch {			timeout-ms = <50>;	key-positions = <5 6 7 9>;		bindings = <&kp ch >;};
		combo_day {			timeout-ms = <50>;	key-positions = <2 3 4 7>;		bindings = <&kp day >;};
		combo_dis {			timeout-ms = <50>;	key-positions = <1 3 4 7>;		bindings = <&kp dis >;};
		combo_each {		timeout-ms = <50>;	key-positions = <4 5 6 7>;		bindings = <&kp each >;};
		combo_eal {			timeout-ms = <50>;	key-positions = <4 5 7>;		bindings = <&kp eal >;};
		combo_ear {			timeout-ms = <50>;	key-positions = <0 4 7 9>;		bindings = <&kp ear >;};
		combo_een {			timeout-ms = <50>;	key-positions = <2 6 7 9>;		bindings = <&kp een >;};
		combo_eir {			timeout-ms = <50>;	key-positions = <0 3 7>;		bindings = <&kp eir >;};
		combo_ent {			timeout-ms = <50>;	key-positions = <2 6 7>;		bindings = <&kp ent >;};
		combo_ere {			timeout-ms = <50>;	key-positions = <0 6 7 9>;		bindings = <&kp ere >;};
		combo_ess {			timeout-ms = <50>;	key-positions = <1 2 7>;		bindings = <&kp ess >;};
		combo_ever {		timeout-ms = <50>;	key-positions = <0 1 7>;		bindings = <&kp ever >;};
		combo_every {		timeout-ms = <50>;	key-positions = <0 1 2 3 7>;	bindings = <&kp every >;};
		combo_for {			timeout-ms = <50>;	key-positions = <0 1 3 5>;		bindings = <&kp for >;};
		combo_from {		timeout-ms = <50>;	key-positions = <0 1 3 5 7>;	bindings = <&kp from >;};
		combo_has {			timeout-ms = <50>;	key-positions = <1 4 6 7 9>;	bindings = <&kp has >;};
		combo_have {		timeout-ms = <50>;	key-positions = <1 4 6 7>;		bindings = <&kp have >;};
		combo_ible {		timeout-ms = <50>;	key-positions = <0 1 4 5 7 9>;	bindings = <&kp ible >;};
		combo_ice {			timeout-ms = <50>;	key-positions = <3 5 7>;		bindings = <&kp ice >;};
		combo_ich {			timeout-ms = <50>;	key-positions = <0 3 4 5 6 7>;	bindings = <&kp ich >;};
		combo_ies {			timeout-ms = <50>;	key-positions = <1 3 7 9>;		bindings = <&kp ies >;};
		combo_igh {			timeout-ms = <50>;	key-positions = <0 3 6 7>;		bindings = <&kp igh >;};
		combo_ight {		timeout-ms = <50>;	key-positions = <0 3 6 7 9>;	bindings = <&kp ight >;};
		combo_ind {			timeout-ms = <50>;	key-positions = <2 3 4 7 9>;	bindings = <&kp ind >;};
		combo_ine {			timeout-ms = <50>;	key-positions = <3 6 7>;		bindings = <&kp ine >;};
		combo_ing {			timeout-ms = <50>;	key-positions = <0 2 3>;		bindings = <&kp ing >;};
		combo_ion {			timeout-ms = <50>;	key-positions = <2 3 5>;		bindings = <&kp ion >;};
		combo_ious {		timeout-ms = <50>;	key-positions = <0 1 5 6>;		bindings = <&kp ious >;};
		combo_irst {		timeout-ms = <50>;	key-positions = <0 1 3 6>;		bindings = <&kp irst >;};
		combo_ise {			timeout-ms = <50>;	key-positions = <1 3 7>;		bindings = <&kp ise >;};
		combo_ism {			timeout-ms = <50>;	key-positions = <0 2 7>;		bindings = <&kp ism >;};
		combo_ist {			timeout-ms = <50>;	key-positions = <1 3 6>;		bindings = <&kp ist >;};
		combo_ive {			timeout-ms = <50>;	key-positions = <1 3 7 10>;		bindings = <&kp ive >;};
		combo_ld {			timeout-ms = <50>;	key-positions = <4 5 7 9>;		bindings = <&kp ld >;};
		combo_less {		timeout-ms = <50>;	key-positions = <1 2 7 10>;		bindings = <&kp less >;};
		combo_less {		timeout-ms = <50>;	key-positions = <1 6 7 10>;		bindings = <&kp less >;};
		combo_lly {			timeout-ms = <50>;	key-positions = <2 3 4 5 9>;	bindings = <&kp lly >;};
		combo_ly {			timeout-ms = <50>;	key-positions = <2 3 4 5>;		bindings = <&kp ly >;};
		combo_ment {		timeout-ms = <50>;	key-positions = <0 2 6 7>;		bindings = <&kp ment >;};
		combo_ness {		timeout-ms = <50>;	key-positions = <1 2 7 9>;		bindings = <&kp ness >;};
		combo_obvious {		timeout-ms = <50>;	key-positions = <0 1 3 5 6 7>;	bindings = <&kp obvious >;};
		combo_ock {			timeout-ms = <50>;	key-positions = <3 5 7 9>;		bindings = <&kp ock >;};
		combo_oint {		timeout-ms = <50>;	key-positions = <2 3 5 6 9>;	bindings = <&kp oint >;};
		combo_ome {			timeout-ms = <50>;	key-positions = <0 5 7>;		bindings = <&kp ome >;};
		combo_one {			timeout-ms = <50>;	key-positions = <2 5 7>;		bindings = <&kp one >;};
		combo_ook {			timeout-ms = <50>;	key-positions = <1 3 5>;		bindings = <&kp ook >;};
		combo_ore {			timeout-ms = <50>;	key-positions = <0 5 7 9>;		bindings = <&kp ore >;};
		combo_ose {			timeout-ms = <50>;	key-positions = <1 5 7>;		bindings = <&kp ose >;};
		combo_other {		timeout-ms = <50>;	key-positions = <0 5 6 7>;		bindings = <&kp other >;};
		combo_ough {		timeout-ms = <50>;	key-positions = <0 3 5 6 7>;	bindings = <&kp ough >;};
		combo_ought {		timeout-ms = <50>;	key-positions = <0 3 5 6 7 9>;	bindings = <&kp ought >;};
		combo_ould {		timeout-ms = <50>;	key-positions = <4 5 6 7 9>;	bindings = <&kp ould >;};
		combo_our {			timeout-ms = <50>;	key-positions = <0 5 6>;		bindings = <&kp our >;};
		combo_ous {			timeout-ms = <50>;	key-positions = <1 5 6>;		bindings = <&kp ous >;};
		combo_ouse {		timeout-ms = <50>;	key-positions = <1 5 6 7>;		bindings = <&kp ouse >;};
		combo_out {			timeout-ms = <50>;	key-positions = <2 5 6>;		bindings = <&kp out >;};
		combo_pra {			timeout-ms = <50>;	key-positions = <0 1 2 4>;		bindings = <&kp pra >;};
		combo_pre {			timeout-ms = <50>;	key-positions = <0 1 2 7>;		bindings = <&kp pre >;};
		combo_pro {			timeout-ms = <50>;	key-positions = <0 1 2 5>;		bindings = <&kp pro >;};
		combo_psy {			timeout-ms = <50>;	key-positions = <1 2 3 6>;		bindings = <&kp psy >;};
		combo_psych {		timeout-ms = <50>;	key-positions = <1 2 3 6 9>;	bindings = <&kp psych >;};
		combo_rst {			timeout-ms = <50>;	key-positions = <0 1 6>;		bindings = <&kp rst >;};
		combo_sh {			timeout-ms = <50>;	key-positions = <1 6 7>;		bindings = <&kp sh >;};
		combo_sm {			timeout-ms = <50>;	key-positions = <0 1 7 10>;		bindings = <&kp sm >;};
		combo_than {		timeout-ms = <50>;	key-positions = <2 4 6 7>;		bindings = <&kp than >;};
		combo_that {		timeout-ms = <50>;	key-positions = <4 6 7>;		bindings = <&kp that >;};
		combo_then {		timeout-ms = <50>;	key-positions = <2 4 6 7 9>;	bindings = <&kp then >;};
		combo_there {		timeout-ms = <50>;	key-positions = <0 6 7>;		bindings = <&kp there >;};
		combo_these {		timeout-ms = <50>;	key-positions = <1 6 7 9>;		bindings = <&kp these >;};
		combo_thin {		timeout-ms = <50>;	key-positions = <2 6 7 10>;		bindings = <&kp thin >;};
		combo_this {		timeout-ms = <50>;	key-positions = <1 3 6 7>;		bindings = <&kp this >;};
		combo_thr {			timeout-ms = <50>;	key-positions = <0 6 7 10>;		bindings = <&kp thr >;};
		combo_tion {		timeout-ms = <50>;	key-positions = <2 3 5 6>;		bindings = <&kp tion >;};
		combo_tive {		timeout-ms = <50>;	key-positions = <1 3 6 7 9>;	bindings = <&kp tive >;};
		combo_ttle {		timeout-ms = <50>;	key-positions = <4 5 6 7 10>;	bindings = <&kp ttle >;};
		combo_uch {			timeout-ms = <50>;	key-positions = <5 6 7 10>;		bindings = <&kp uch >;};
		combo_uous {		timeout-ms = <50>;	key-positions = <1 5 6 9>;		bindings = <&kp uous >;};
		combo_was {			timeout-ms = <50>;	key-positions = <1 3 4>;		bindings = <&kp was >;};
		combo_we {			timeout-ms = <50>;	key-positions = <3 4 7>;		bindings = <&kp we >;};
		combo_wh {			timeout-ms = <50>;	key-positions = <3 4 7 9>;		bindings = <&kp wh >;};
		combo_what {		timeout-ms = <50>;	key-positions = <3 4 6 7 9>;	bindings = <&kp what >;};
		combo_when {		timeout-ms = <50>;	key-positions = <2 3 4 6 7>;	bindings = <&kp when >;};
		combo_with {		timeout-ms = <50>;	key-positions = <3 4 6 7>;		bindings = <&kp with >;};
		combo_your {		timeout-ms = <50>;	key-positions = <0 5 6 9>;		bindings = <&kp your >;};


    }; */



       keymap {
		compatible = "zmk,keymap";
		
		default_layer {
        bindings = <
//		┌───P1──────┬───R1──────┬───M1──────┬───I1──────┐
			&kp R		&kp S		&kp N		&kp I
//	┌───┴P2─────┬───┼───R2──────┼───M2──────┼───I2──────┤
        &kp A			&kp O		&kp T		&kp E 
//	└───────────┘	└───────────┼───EncSW───┼───T1──────┼───T2──────┐
									&none	  &kp SPACE		&none
//								└───────────┴───────────┴───────────┘
							
        >;
        };
    };
};
