/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {

	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <11>;
		rows = <1>;
		map = <

//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1  | 2  | 3  |
//	       | 0	├────┼────┼────┤
//	   ┌───┴┬───┤ 5  | 6  | 7  |
//	   | 4  |	└────┴──┬─┴──┬─┴──┐
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
//


		RC(0,0)		RC(0,1)		RC(0,2)		RC(0,3)
		RC(0,4)		RC(0,5)		RC(0,6)		RC(0,7)
								RC(0,8)		RC(0,9)		RC(0,10)
		>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-direct";
		label = "KSCAN";
		input-gpios
		= <&pro_micro 6  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,0)		┬	Pinky	P1 (inner)
		, <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,4)		┴	Pinky	P2 (outer)
		, <&pro_micro 5  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,1)		┬	Ring	R1
		, <&pro_micro 7  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,5)		┴	Ring	R2
		, <&pro_micro 4  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,2)		┬	Middle	M1
		, <&pro_micro 8  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,6)		┴	Middle	M2
		, <&pro_micro 0  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,3)		┬	Index	I1
		, <&pro_micro 9  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,7)		┴	Index	I2
		, <&pro_micro 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,8)		┬	Thumb Encoder SW	EncSW
		, <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,9)		├	Thumb 	T1 (inner)
		, <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	RC(0,10)	┴	Thumb	T2 (outer)
		;
	};

};

// NEED TO SCAN FOR ENCODER
// insert code here


// NEED TO SCAN FOR JOYSTICK
// insert code here
