/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {

	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <11>;
		rows = <1>;
		map = <

//								
//		     	┌────┬────┬────┐
//		   ┌────┤ 1s | 2n | 3i |
//	       | 0r	├────┼────┼────┤
//	   ┌───┴┬───┤ 5o | 6t | 7e |
//	   | 4a |	└────┴──┬─┴──┬─┴──┐
//	   └────┘		    | 8  | 9  ├────┐
//					    └────┴────┤ 10 |
//							      └────┘
//
//		r 	s 	n 	i 
//		a 	o 	t 	e 
// 				enc spc	?

		RC(0,0)		RC(0,1)		RC(0,2)		RC(0,3)
		RC(0,4)		RC(0,5)		RC(0,6)		RC(0,7)
								RC(0,8)		RC(0,9)		RC(0,10)
		>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-direct";
		label = "KSCAN";
		input-gpios // WHY the living fuck it has to be in this order to work is beyond me
		= <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	r
		, <&pro_micro 5  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	a
		, <&pro_micro 4  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	n
		, <&pro_micro 0  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	i
		, <&pro_micro 6  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	o
		, <&pro_micro 7  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	s
		, <&pro_micro 8  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	t
		, <&pro_micro 9  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	e
		, <&pro_micro 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	EncSW
		, <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	space
		, <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>	//	?
		;

	};
	
	
	left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "okay";
    };
	
    joystickx: joystickx {
        compatible = "joystick";
        label = "JOYSTICKX";
	io-channels = <&adc 7>; // pro_micro (21) / Nice!Nano_V2 (P0.31) / nRF52840 (AIN7)
	status = "okay";
	resolution = <512>;
	frequency = <50>;
	min_on = <256>;
	reverse;
    };

    joysticky: joysticky {
        compatible = "joystick";
        label = "JOYSTICKY";
	io-channels = <&adc 5>; // pro_micro (20) / Nice!Nano_V2 (P0.29) / nRF52840 (AIN5)
	status = "okay";
	resolution = <512>;
	frequency = <50>;
	min_on = <256>;
	reverse;
    };
	
/*
	&adc {
		status = "okay";
	};

	&left_encoder {
		status = "okay";
	};
*/
	sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder>;
    };
		// &joystickx &joysticky>;
};

